AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  Summarizes Discord activity on a weekly basis

Parameters:
  DiscordSecret:
    Type: String
  GuildId:
    Type: String

Metadata:
  esbuild-properties: &esbuild-properties
    Format: esm
    Minify: true
    OutExtension:
      - .js=.mjs
    Target: es2020
    Sourcemap: false
    EntryPoints:
      - index.mjs
    Banner:
      - js=import { createRequire } from 'module'; const require = createRequire(import.meta.url);
    External:
      - '@aws-sdk/*'

Globals:
  Function:
    Runtime: nodejs20.x
    Architectures:
      - arm64
    Tracing: Active
    Timeout: 15
    MemorySize: 1024
    CodeUri: functions
    Environment:
      Variables:
        AWS_NODEJS_CONNECTION_REUSE_ENABLED: 1

Resources:
  CommunityApi:
    Type: AWS::Serverless::HttpApi
    Properties:
      StageName: v1
      DefinitionBody:
        'Fn::Transform':
          Name: AWS::Include
          Parameters:
            Location: ./openapi.yaml

  GetChannelMessagesFunction:
    Type: AWS::Serverless::Function
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        <<: *esbuild-properties
        EntryPoints:
          - get-channel-messages.mjs
    Properties:
      Handler: get-channel-messages.handler
      Policies:
        - AWSLambdaBasicExecutionRole
        - Version: 2012-10-17
          Statement:
            - Effect: Allow
              Action: secretsmanager:GetSecretValue
              Resource: !Ref DiscordSecret
      Environment:
        Variables:
          SECRET_ID: !Ref DiscordSecret

  GetSummaryListPageFunction:
    Type: AWS::Serverless::Function
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        <<: *esbuild-properties
        EntryPoints:
          - get-summary-list-page.mjs
    Properties:
      Handler: get-summary-list-page.handler
      Policies:
        - AWSLambdaBasicExecutionRole
        - Version: 2012-10-17
          Statement:
            - Effect: Allow
              Action: secretsmanager:GetSecretValue
              Resource: !Ref DiscordSecret
            - Effect: Allow
              Action:
                - dynamodb:GetItem
                - dynamodb:Query
              Resource: !GetAtt DiscordTable.Arn
      Environment:
        Variables:
          SECRET_ID: !Ref DiscordSecret
          TABLE_NAME: !Ref DiscordTable
      Events:
        ApiEvent:
          Type: HttpApi
          Properties:
            ApiId: !Ref CommunityApi
            Path: /summaries
            Method: GET

  GetSummaryPageFunction:
    Type: AWS::Serverless::Function
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        <<: *esbuild-properties
        EntryPoints:
          - get-summary-page.mjs
    Properties:
      Handler: get-summary-page.handler
      Policies:
        - AWSLambdaBasicExecutionRole
        - Version: 2012-10-17
          Statement:
            - Effect: Allow
              Action: dynamodb:GetItem
              Resource: !GetAtt DiscordTable.Arn
      Environment:
        Variables:
          TABLE_NAME: !Ref DiscordTable
      Events:
        ApiEvent:
          Type: HttpApi
          Properties:
            ApiId: !Ref CommunityApi
            Path: /summaries/{summaryId}
            Method: GET

  StartSummaryTaskFunction:
    Type: AWS::Serverless::Function
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        <<: *esbuild-properties
        EntryPoints:
          - start-summary-task.mjs
    Properties:
      Handler: start-summary-task.handler
      Policies:
        - AWSLambdaBasicExecutionRole
        - Version: 2012-10-17
          Statement:
            - Effect: Allow
              Action: states:StartExecution
              Resource: !Ref SummarizeStateMachine
      Environment:
        Variables:
          STATE_MACHINE_ARN: !Ref SummarizeStateMachine
      Events:
        ApiEvent:
          Type: HttpApi
          Properties:
            ApiId: !Ref CommunityApi
            Path: /summaries
            Method: POST

  GetMemberDataFunction:
    Type: AWS::Serverless::Function
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        <<: *esbuild-properties
        EntryPoints:
          - get-member-data.mjs
    Properties:
      Handler: get-member-data.handler
      Policies:
        - AWSLambdaBasicExecutionRole
        - Version: 2012-10-17
          Statement:
            - Effect: Allow
              Action: secretsmanager:GetSecretValue
              Resource: !Ref DiscordSecret
      Environment:
        Variables:
          SECRET_ID: !Ref DiscordSecret
          GUILD_ID: !Ref GuildId

  MapChannelNamesFunction:
    Type: AWS::Serverless::Function
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        <<: *esbuild-properties
        EntryPoints:
          - map-channel-names.mjs
    Properties:
      Handler: map-channel-names.handler
      Policies:
        - AWSLambdaBasicExecutionRole
        - Version: 2012-10-17
          Statement:
            - Effect: Allow
              Action: secretsmanager:GetSecretValue
              Resource: !Ref DiscordSecret
      Environment:
        Variables:
          SECRET_ID: !Ref DiscordSecret
          GUILD_ID: !Ref GuildId

  SummarizeTranscriptFunction:
    Type: AWS::Serverless::Function
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        <<: *esbuild-properties
        EntryPoints:
          - summarize-transcript.mjs
    Properties:
      Handler: summarize-transcript.handler
      Policies:
        - AWSLambdaBasicExecutionRole
        - Version: 2012-10-17
          Statement:
            - Effect: Allow
              Action: bedrock:InvokeModel
              Resource: '*'

  FormatSummaryEmailFunction:
    Type: AWS::Serverless::Function
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        <<: *esbuild-properties
        EntryPoints:
          - format-summary-email.mjs
    Properties:
      Handler: format-summary-email.handler
      Policies:
        - AWSLambdaBasicExecutionRole
        - Version: 2012-10-17
          Statement:
            - Effect: Allow
              Action: secretsmanager:GetSecretValue
              Resource: !Ref DiscordSecret
      Environment:
        Variables:
          SECRET_ID: !Ref DiscordSecret

  DiscordTable:
    Type: AWS::DynamoDB::Table
    Properties:
      BillingMode: PAY_PER_REQUEST
      KeySchema:
        - AttributeName: pk
          KeyType: HASH
        - AttributeName: sk
          KeyType: RANGE
      AttributeDefinitions:
        - AttributeName: pk
          AttributeType: S
        - AttributeName: sk
          AttributeType: S

  SummarizeStateMachine:
    Type: AWS::Serverless::StateMachine
    Properties:
      DefinitionUri: state-machines/summarize.asl.json
      DefinitionSubstitutions:
        LambdaInvoke: !Sub arn:${AWS::Partition}:states:::lambda:invoke
        MapChannelNames: !GetAtt MapChannelNamesFunction.Arn
        GetChannelMessages: !GetAtt GetChannelMessagesFunction.Arn
        SummarizeTranscript: !GetAtt SummarizeTranscriptFunction.Arn
        FormatSummaryEmail: !GetAtt FormatSummaryEmailFunction.Arn
        GetMemberData: !GetAtt GetMemberDataFunction.Arn
        DynamoDbGetItem: !Sub arn:${AWS::Partition}:states:::dynamodb:getItem
        DynamoDbPutItem: !Sub arn:${AWS::Partition}:states:::dynamodb:putItem
        DynamoDbUpdateItem: !Sub arn:${AWS::Partition}:states:::dynamodb:updateItem
        TableName: !Ref DiscordTable
        EventBridgePutEvents: !Sub arn:${AWS::Partition}:states:::events:putEvents
      Policies:
        - Version: 2012-10-17
          Statement:
            - Effect: Allow
              Action: lambda:InvokeFunction
              Resource:
                - !GetAtt MapChannelNamesFunction.Arn
                - !GetAtt GetChannelMessagesFunction.Arn
                - !GetAtt SummarizeTranscriptFunction.Arn
                - !GetAtt FormatSummaryEmailFunction.Arn
                - !GetAtt GetMemberDataFunction.Arn
            - Effect: Allow
              Action:
                - dynamodb:GetItem
                - dynamodb:PutItem
                - dynamodb:UpdateItem
              Resource: !GetAtt DiscordTable.Arn
            - Effect: Allow
              Action: events:PutEvents
              Resource: !Sub arn:${AWS::Partition}:events:${AWS::Region}:${AWS::AccountId}:event-bus/default
      Events:
        Trigger:
          Type: Schedule
          Properties:
            Schedule: "cron(0 2 ? * MON *)"
            Input: >
              {
                "channelNames": ["security", "event-driven", "compute", "data", "programming-languages", "observability", "api", "iac-tooling", "cicd", "finops", "general", "intros"],
                "mode": "schedule"
              }

Outputs:
  ApiBaseUrl:
    Description: API Gateway endpoint for the community API
    Value: !Sub 'https://${CommunityApi}.execute-api.${AWS::Region}.amazonaws.com/v1'
